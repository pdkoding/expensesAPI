{"version":3,"file":"expense.js","sourceRoot":"","sources":["expense.ts"],"names":[],"mappings":";;AAAA,iCAAkC;AACrB,QAAA,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE,CAAA;AAC9C,2CAA4C;AAE5C,6DAA6D;AAE7D,sBAAc,CAAC,GAAG,CAAC,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB;IACxE,MAAM,CAAC,sBAAW,EAAE,CAAC,IAAI,CAAC,UAAC,MAAmB;QAC1C,IAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QAC/D,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAC,GAAS,EAAE,OAAa;YACjD,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,GAAG,CAAA;YACnB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YAEjB,0BAA0B;YAC1B,4BAA4B;YAC5B,KAAK;QACb,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AAAA,CAAC,EAEH,sBAAc,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,GAAoB,EAAE,GAAqB;IACzE,IAAI,WAAW,GAAG,CAAC;QACf,KAAK,EAAE,kBAAkB,CAAA,IAAI;QAC7B,YAAY,EAAE,yBAAyB,CAAA,YAAY;QACnD,MAAM,EAAE,mBAAmB,CAAA,GAAG;KACjC,CAAC,CAAA;IACF,MAAM,CAAC,sBAAW,EAAE,CAAC,IAAI,CAAC,UAAC,MAAmB;QAC1C,IAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QAC/D,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,GAAU,EAAE,MAAW;YACtD,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,GAAG,CAAA;YACnB,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;YACzB,MAAM,CAAC,MAAM,CAAA;QACjB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAC,CAAA;AAEH,sBAAc,CAAC,GAAG,CAAC,eAAe,EAAE,UAAS,GAAoB,EAAE,GAAqB;IACpF,MAAM,CAAC,sBAAW,EAAE,CAAC,IAAI,CAAC,UAAC,MAAmB;QAC1C,IAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QAC/D,UAAU,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,0BAA0B,EAAC,EAAE,EAAC,IAAI,EAAE;gBAClE,KAAK,EAAE,aAAa;gBACpB,YAAY,EAAE,YAAY;gBAC1B,MAAM,EAAE,QAAQ;aACnB,EAAC,CAAC,CAAA;QACH,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IACnB,CAAC,CAAC,CAAA;AACN,CAAC,CAAC,CAAA;AAMA;;;;;;;;;IASE","sourcesContent":["import * as express from 'express'\nexport const expensesRouter = express.Router()\nimport { connectToDb } from '../../dataBase'\nimport { MongoClient } from \"mongodb\"\n// import {returnContendOfDb} from \"../models/expensesModel\";\n\nexpensesRouter.get('/expenses', (req: express.Request, res: express.Response) => {\n    return connectToDb().then((client: MongoClient) => {\n        const collection = client.db('expenses').collection('expenses')\n        collection.find({}).toArray((err:Error, content: JSON) => {\n            if (err) return err\n            res.json(content)\n\n            // .then((data: JSON) => {\n            //     return res.json(data)\n            // })\n    })\n})},\n\nexpensesRouter.post('/expenses', (req: express.Request, res: express.Response) => {\n    var spendedCash = ({\n        title: /*req.body.title*/\"hm\",\n        purchaseDate: /*req.body.purchaseDate*/\"30.04.2018\",\n        amount: /*req.body.amount*/222\n    })\n    return connectToDb().then((client: MongoClient) => {\n        const collection = client.db('expenses').collection('expenses')\n        collection.insertOne(spendedCash, (err: Error, result: any) => {\n            if (err) return err\n            res.redirect('/expenses')\n            return result\n        })\n    })\n}))\n\nexpensesRouter.put('/expenses/_id', function(req: express.Request, res: express.Response){\n    return connectToDb().then((client: MongoClient) => {\n        const collection = client.db('expenses').collection('expenses')\n        collection.findOneAndUpdate({_id: \"5a8b1b5172e51d6104b121e0\"}, {$set: {\n            title: \"mega update\",\n            purchaseDate: \"01.05.2018\",\n            amount: 32423423\n        }})\n        res.json('finally')\n        })\n    })\n})\n\n\n\n\n      /*  collection.updateOne({_id: \"5a8b1b5172e51d6104b121e0\"}, { $set: {\n                    title: \"megaupdate\",\n                    purchaseDate: \"01.05.2018\",\n                    amount: 32423423\n                }},\n            function(err, callback){\n                if(err) res.json(err)\n                else res.json('finally')\n            })\n    })*/\n\n"]}