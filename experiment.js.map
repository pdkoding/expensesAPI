{"version":3,"file":"experiment.js","sourceRoot":"","sources":["experiment.ts"],"names":[],"mappings":";;AAAA,QAAQ;AACR,iCAAoC;AACpC,+BAAkC;AAElC,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC,CAAA;AAC3E,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,EAAC,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAChD,EAAE,CAAC,IAAI,CAAC,cAAa,CAAC,CAAC,CAAC;AAiBxB,gBAAuB,EAAS,EAAE,EAA0B;IACxD,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,cAAc;QACtC,EAAE,CAAC,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,cAAc,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,IAAI,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,EAAE,UAAC,GAAG,EAAE,GAAO;YACnE,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC;AARD,wBAQC;AAED,gBAAuB,QAAe,EAAE,EAA0B;IAC9D,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,UAAC,GAAG,EAAE,cAAc;QACtC,EAAE,CAAC,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACxB,cAAc,CAAC,SAAS,CAAC;YACrB,IAAI,EAAE,IAAI,OAAO,CAAC,QAAQ,CAAC,0BAA0B,CAAC;YACtD,QAAQ,EAAE,QAAQ;YAClB,SAAS,EAAE,QAAQ;SACtB,EAAE,UAAC,GAAG,EAAE,MAAM;YACX,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACxB,IAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAE1B,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAC7B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAClB,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC;AAnBD,wBAmBC","sourcesContent":["// Mongo\nimport mongodb = require('mongodb');\nimport image = require('./image');\n\nvar server = new mongodb.Server('localhost', 27017, {auto_reconnect: true})\nvar db = new mongodb.Db('mydb', server, {w: 1});\ndb.open(function () {});\n\nexport interface User {\n    _id: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    boards: Board[];\n}\n\nexport interface Job {\n    _id: mongodb.ObjectID;\n    user: string;\n    inputUri: string;\n    outputUri: string;\n}\n\nexport function getJob(id:string, cb:(err, job?:Job) => void) {\n    db.collection('jobs', (err, jobsCollection) => {\n        if (err) return cb(err);\n        jobsCollection.findOne({\"_id\": new mongodb.ObjectID(id)}, (err, job:Job) => {\n            if (err) return cb(err);\n            return cb(null, job);\n        })\n    })\n}\n\nexport function addJob(inputUri:string, cb:(err, job?:Job) => void) {\n    db.collection('jobs', (err, jobsCollection) => {\n        if (err) return cb(err);\n        jobsCollection.insertOne({\n            user: new mongodb.ObjectID(\"5541c66b51636c994b0454db\"),\n            inputUri: inputUri,\n            outputUri: inputUri\n        }, (err, result) => {\n            if (err) return cb(err);\n            const job = result.ops[0];\n\n            image.downloadFile(job.inputUri, () => {\n                console.log('image downloaded');\n                console.log('arguments', arguments);\n            });\n\n            cb(null, job);\n        })\n    })\n}"]}